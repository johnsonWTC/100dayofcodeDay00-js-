#pragma checksum "C:\Users\jdubula\Desktop\100dayofcodeDay00-js-\EF06\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "016d0eb6b5cbe14985fff9aea5465124ec49137c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\jdubula\Desktop\100dayofcodeDay00-js-\EF06\Views\_ViewImports.cshtml"
using EF06;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\jdubula\Desktop\100dayofcodeDay00-js-\EF06\Views\_ViewImports.cshtml"
using EF06.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"016d0eb6b5cbe14985fff9aea5465124ec49137c", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8b67265e16a2c3120ad80268b2b99fa20d19866d", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\jdubula\Desktop\100dayofcodeDay00-js-\EF06\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<input autocomplete=""off"" id=""BookName""/>
<button id=""add"">ADD</button>
<hr />
<div id=""div""></div>
<script>
    let BookName = document.getElementById(""BookName"");
    let add = document.getElementById(""add"");
    let div = document.getElementById(""div"");

    fetch(""https://localhost:44399/api/books/"").then(function (res) {
        res.json().then(function (data) {
            for (let i = 0; data.length > i; i++) {
                let li = document.createElement(""li"");
                li.innerHTML = data[i].bookName;
                let updateB = document.createElement(""button"");
                updateB.innerHTML = ""Update"";
                updateB.addEventListener(""click"", function () {
                    if (BookName.value.length == 0) {
                        alert(""New Book name required"");
                    } else {
                        fetch(`https://localhost:44399/api/books/${data[i].booksID}/${BookName.value}`, {
                            method: ""Put"",
           ");
            WriteLiteral(@"                 headers: {
                                'Accept': 'application/json',
                                'Content-Type': 'application/json'
                            },
                        })
                        location.reload();
                    }

                })
                let deleteB = document.createElement(""button"");
                deleteB.innerHTML = ""Delete"";
                deleteB.addEventListener(""click"", function () {
                    fetch(`https://localhost:44399/api/books/${data[i].booksID}`, {
                        method: ""delete"",
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/json',
                        },

                    })
                    location.reload();
                })
               
                div.append(li);
                div.append(updateB);
                div.append(deleteB);
          ");
            WriteLiteral(@"  }

        })
    })


    add.addEventListener(""click"", function () {
        if (BookName.value.length == 0) {
            alert(""New Book name required"");
        } else {
            fetch(`https://localhost:44399/api/books/`, {
                method: ""Post"",
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    ""bookName"": BookName.value,
                })
            })
            location.reload();
        }

    })
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
